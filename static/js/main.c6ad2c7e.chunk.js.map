{"version":3,"sources":["components/Button.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Button.module.css"],"names":["Button","props","calc","onClick","event","setState","target","innerHTML","className","s","glowButton","value","App","useState","state","result","setResult","v","cur","length","copy","isFinite","includes","push","endsWith","slice","results","currentResult","numButtons","id","v1","key","operatorButtons","currentOperator","reduce","prev","curr","map","el","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c6ad2c7e.chunk.js","sourcesContent":["import React, {Dispatch, SetStateAction, useState} from \"react\";\r\nimport s from \"./Button.module.css\"\r\nimport {stateTypes} from \"../App\";\r\n\r\ntype ButtonPropsType = {\r\n    value: string\r\n    calc: (v: string) => SetStateAction<stateTypes>\r\n    setState: Dispatch<SetStateAction<stateTypes>>\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = (props:ButtonPropsType) => {\r\n\r\n    let calc = props.calc\r\n\r\n\r\n    const buttonHandler = (event: any) => props.setState(calc(event.target.innerHTML))\r\n    return (\r\n        <button onClick={buttonHandler} className={s.glowButton}>{props.value}</button>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Button} from \"./components/Button\";\nimport {v1} from \"uuid\";\n\n\nexport type stateTypes = string[]\n\nfunction App() {\n\n    const initialState = ['0']\n    const [state, setState] = useState<stateTypes>(initialState)\n    const [result, setResult] = useState<stateTypes>([''])\n\n    const calc = (v: string) => {\n        let cur = state.length - 1\n        let copy = [...state]\n        if (isFinite(+v) && (state.length % 2)) {\n            if (state[cur] === '0') {\n                copy[cur] = v\n                return copy\n            } else {\n                copy[cur] += v\n                return copy\n            }\n        }\n        if ((state.length % 2) && v === '.' && !copy[cur].includes('.')) {\n            copy[cur] += '.'\n            return copy\n        }\n\n        if (isFinite(+v) && !(state.length % 2)) {\n            copy.push(v)\n            return copy\n        }\n        if ((v === '+' || v === '-' || v === '/' || v === '*')) {\n            if (state.length % 2) {\n                if (copy[cur].endsWith('.')) {\n                    copy[cur] = copy[cur].slice(0, -1)\n                }\n                copy.push(v)\n                return copy\n            } else {\n                copy[cur] = v\n                return copy\n            }\n        }\n        if (v === 'Enter') {\n            let results = [...result, currentResult]\n            setResult(results)\n            copy = ['0']\n            return copy\n        } else return copy\n    }\n\n\n    const numButtons = [\n        {id: v1(), key: \"1\"},\n        {id: v1(), key: \"2\"},\n        {id: v1(), key: \"3\"},\n        {id: v1(), key: \"4\"},\n        {id: v1(), key: \"5\"},\n        {id: v1(), key: \"6\"},\n        {id: v1(), key: \"7\"},\n        {id: v1(), key: \"8\"},\n        {id: v1(), key: \"9\"},\n        {id: v1(), key: \"0\"},\n        {id: v1(), key: \".\"},\n        {id: v1(), key: \"Enter\"}];\n    const operatorButtons = [\n        {id: v1(), key: \"/\"},\n        {id: v1(), key: \"*\"},\n        {id: v1(), key: \"-\"},\n        {id: v1(), key: \"+\"},]\n\n    let currentOperator = ''\n    let currentResult = state.reduce((prev: any, curr: any) => {\n        if (curr === '+' || curr === '-' || curr === '/' || curr === '*') {\n            currentOperator = curr\n            return prev\n        } else {\n            switch (currentOperator) {\n                case '+':\n                    return +prev + +curr\n                case '-':\n                    return +prev - +curr\n                case '*':\n                    return +prev * +curr\n                case '/':\n                    return +prev / +curr\n            }\n        }\n\n\n    })\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <div className=\"numBox\"> {numButtons.map((el) => <Button setState={setState}\n                                                                         calc={calc}\n                                                                         key={el.id} value={el.key}/>)}</div>\n                <div className=\"operatorBox\">{operatorButtons.map((el) => <Button setState={setState}\n                                                                                  calc={calc}\n                                                                                  key={el.id}\n                                                                                  value={el.key}/>)}</div>\n            </div>\n            <div className=\"currentResult\">{state.join(' ')} = {currentResult}</div>\n            <div>Результаты:</div>\n            <div className=\"results\">{result.map((el: string) => <div>{el}</div>)}</div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"glowButton\":\"Button_glowButton__3YOVp\"};"],"sourceRoot":""}